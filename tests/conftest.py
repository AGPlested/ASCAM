import os

import pytest
import tempfile
import numpy as np
from PySide2.QtWidgets import QApplication

from src.core import Recording
from src.constants import TEST_FILE_NAME
from src.gui.mainwindow import MainWindow


@pytest.fixture(scope="class")
def recording():
    path = os.path.split( os.path.dirname(os.path.abspath(__file__)) )[0]
    path = os.path.join(path, "data")
    TEST_FILE = os.path.join(path, TEST_FILE_NAME)
    return Recording.from_file(TEST_FILE, 4e4)

@pytest.fixture(scope="class")
def main(recording):
    QApplication([])
    main_window = MainWindow(screen_resolution=(1920, 1080))
    main_window.data = recording
    return main_window

def path_to_ascam_file(*args):
    path = os.path.split( os.path.dirname(os.path.abspath(__file__)) )[0]
    return os.path.join(path, *args)

@pytest.fixture(scope="class")
def recording():
    """Note: This fixture is only run once for all tests in this class.
    It can therefore be modified by the tests and their order might be important."""
    TEST_FILE = path_to_ascam_file("data", TEST_FILE_NAME)
    return Recording.from_file(TEST_FILE, 4e4)

@pytest.fixture(scope="class")
def csv_data():
    """This csv file was generated by ASCAM (commot 8f4f6a0) from the
    example data with the parameters loaded in test-mode."""
    filepath = path_to_ascam_file("data", "test.csv")
    with open(filepath, "r") as f:
        header = f.readline()
        header += f.readline()
    data = np.loadtxt(filepath, skiprows=1, delimiter=",")
    return header, data

@pytest.fixture(scope="class")
def mat_save_file():
    _, temp_file_name = tempfile.mkstemp()
    return temp_file_name+".mat"

