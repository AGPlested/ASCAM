added a scrollbar to the list of episode

tried resizing using the `grid_rowconfigure` method, not very succesful, only resized the plot in horizontal direction, nothing else

----------------------------------------------------------------------

changed the model to the new structure `Model>Series>Episode` to have better management, Model is a dict whose values are the Series which are lists containing episodes
filtering, baselining and all other manipulations that can be applied to a single episode are now episode methods, the series object has methods to apply each operation to all episodes in the series

modified the GUI code to work with the new model and hopefully be more general
started adding VERBOSE option for gui

------------------------------------------------------------------------

fixed a small problem in `analysis.baseline`, now properly accepts single intervals, and added support for time vectors in different units of seconds

wrote `threshold_crossing` which takes a signal and an arbitrary number of amplitudes and idealizes the signal to those amplitudes by assigning to each point of the signal the closest amplitude

--------------------------------------------------------------------------

removed `single_state_threshold_crossing` because crossing in two direction is not needed

added another `multilevel_threshold` that does threshold crossing for given thresholds rather than amplitudes, can take any number of thresholds and will idealize to linear spaced fraction of maximum amplitude
this function can also take absolute values for the thresholds

new filter function so only one function call from the model is required

started working on making series execute instruction when they are initialized

----------------------------------------------------------------------------

plot now resizes better, episode list also resizes and starts bigger

---------------------------------------------------------------------------

fixed it so that plot is again drawn when data is first loaded (was empty)

problem: plot seems to draw twice on first loading, creating an orange plot lying over the normal blue one
-fixed

episodeList now displays empty when program starts

------------------------------------------------------------------------------

started all-point histogram code

-----------------------------------------------------------------------------

can use `.mat` files, these should work easier on all systems since they do not
require python2, also much faster loading
will keep axograph support for now

cannot load axograph data on another linux machine (don't know why)

loading data now also plots the first episode

do we need the command voltage plot or not? - include option to plot it

what is different about the `170922 004 Copy Export.mat` file?
it cannot be loaded with scipy.io.loadmat
-problem was that it has more than 1000 episodes which are considered to be different variables in the matlab file and are named by 3-digit columns numbers

-------------------------------------------------------------------------------

fixed the matlab file loading using `varmats_from_mat`

-------------------------------------------------------------------------------

started a plotting module that contains functions to create an all point histogram and to select data based on piezo activity

-------------------------------------------------------------------------------

command and piezo voltage are no longer required in matlab files and axograph files

--------------------------------------------------------------------------------

there is now a dropdown menu that shows as entries all the datakeys that exist selecting a new key through this menu will change the episode list and the histogram and plots

what still needs to be added is a function that updates the current selection, i.e. what is displayed by the menu, when an operation such as filtering is carried out.
to this end it might be useful to replace the attribute `datakey` of the main gui class
with a stringvar that can be traced to update everything that should change all at once

---------------------------------------------------------------------------------

`GUI.datakey` is now a `tk.StringVar` and is traced in order to make selection of different series easier

`Series` objects now take argument data which works the same as the argument of standard `list()` objects, loading data is now done using list comprehension to build the series object

----------------------------------------------------------------------------------

`series` methods no longer change the episodes in the current series but instead return a new series containing the changed data

the `call_operation` method of `Model` now directly calls the operation if `check_operation` returns true
it also return a boolean value which the GUI uses to determine whether or not the plots and list should be updated

`check_operation` checks if the name of the operate (e.g. FILTER or BC) is contained in the current datakey and only returns true if not. this means a series cannot be filtered twice, even at different frequencies

datakeys now contain all the information e.g. "FILTER_1000.0" instead of only the operation

histogram now also resizes when window is resized, also removed the `figsize` kwarg from the plt.figure call for the histogram


ISSUES:
    - when switching series through the dropdown menu or by clicking the filter button the selected episode is no longer highlighted in the list
    - in the same situations as above the command voltage is drawn with y ranging to 3000

NEXT:
episode selection - include a 'select all button'/ some kind of inversion between selecting to keep or to discard
change the histogram to a histogram of the current episode and display the all-point histogram 
transparantly in the background
finish baseline button

TO DO:
    - give the series in the dropdown menu shorter names
    - add `reconstruct` method to `series` that takes the input values of attributes and performs the corresponding operations 
    - make the unit of current, voltage etc. a parameter in episode objects with default pA and mV
    - implement gaussian mixture model for fitting the histogram
    - add a better toolbar to the plot
    - add units/labels to plots
    - interpolation in threshold crossing
    - amplitude estimation in threshold crossing
    - different basis functions for baseline corrention (e.g. cosine)
    - move plotting to a seperate module so that gui.py only ever uses `plt.show(x)`
    - a menu for selecting the time frame for the histgram
    - remove command voltage plot, add display avg and std of command voltage, or display warning if command voltage std is >1% of average
